MODULE LSO;	IMPORT 		LSG, Texts, Oberon;		TYPE		cell = LSG.cell;		atomCell = LSG.atomCell;		consCell = LSG.consCell;	VAR		W: Texts.Writer;	PROCEDURE print*(c: cell);	BEGIN		printCell(c); Texts.WriteLn(W); 		Texts.Append(Oberon.Log, W.buf);	END print;		PROCEDURE printCell(c: cell);	BEGIN		IF c IS atomCell THEN			printAtom(c);		ELSIF c IS consCell THEN			printCons(c);		END;	END printCell; 		PROCEDURE printAtom(c: cell);	BEGIN		IF c IS atomCell THEN			Texts.WriteString(W, c(atomCell).name);		END;	END printAtom;		PROCEDURE printCons(c: cell);		VAR cc: consCell;	BEGIN		IF c IS consCell THEN			cc := c(consCell);			Texts.WriteString(W, "(");			WHILE cc.cdr # NIL DO				printCell(cc(consCell).car); 				c := cc(consCell).cdr; cc := c(consCell);				IF cc.cdr # NIL THEN Texts.WriteString(W, " ") END;			END;			Texts.WriteString(W, ")");		END;	END printCons;	BEGIN	Texts.OpenWriter(W);END LSO.